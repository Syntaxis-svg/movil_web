{"version":3,"file":"src_app_registro_registro_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;;AAAzB,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;IAWlC,kBAAkB,SAAlB,kBAAkB;;AAAlB,kBAAkB;IAT9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACnBmB;AACD;AACR;AAGQ;IAQpC,YAAY,SAAZ,YAAY;IAQvB,YAAoB,eAAgC,EAAU,OAAgB,EAAU,MAAa;QAAjF,oBAAe,GAAf,eAAe,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAS;QAAU,WAAM,GAAN,MAAM,CAAO;QANrG,YAAO,GAAY;YACjB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;SACX;IAEwG,CAAC;IAE1G,QAAQ;IACR,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEK,OAAO;;YACX,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAExD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAElC;iBACG;gBACF,IAAI,CAAC,aAAa,EAAE,CAAC;aAEtB;QACH,CAAC;KAAA;IAEK,YAAY;;YAChB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,0BAA0B;gBAClC,OAAO,EAAE,eAAe;gBACxB,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;IACK,aAAa;;YACjB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,oBAAoB;gBAC5B,OAAO,EAAE,kDAAkD;gBAC3D,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;;;;;;;AAhDU,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qEAAmC;;KAEpC,CAAC;GACW,YAAY;AAAA","sources":["./src/app/registro/registro-routing.module.ts","./src/app/registro/registro.module.ts","./src/app/registro/registro.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistroPage } from './registro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistroPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistroPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistroPageRoutingModule } from './registro-routing.module';\n\nimport { RegistroPage } from './registro.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegistroPageRoutingModule\n  ],\n  declarations: [RegistroPage]\n})\nexport class RegistroPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage-angular';\nimport { Router } from '@angular/router';\nimport { Usuario } from 'src/app/interfaces/usuario';\n\nimport { AlertController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.page.html',\n  styleUrls: ['./registro.page.scss'],\n})\nexport class RegistroPage implements OnInit {\n\n  usuario: Usuario = {\n    username: '',\n    password: '',\n    correo: ''\n  }\n  \n  constructor(private alertController: AlertController, private storage: Storage, private router:Router) { }\n\n  ngOnInit() { \n  }\n\n\n  onSubmit() {\n    this.guardar();\n  }\n\n  async guardar() {\n    let usr = await this.storage.get(this.usuario.username);\n\n    if (usr == null) {\n      await this.storage.set(this.usuario.username, this.usuario);\n      this.presentAlert();\n      this.router.navigate(['/login']);\n      \n    }\n    else{\n      this.presentAlert2();\n      \n    }\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Registrado correctamente',\n      message: 'Inicie Sesion',\n      buttons: ['OK'],\n    });\n    await alert.present();\n  }\n  async presentAlert2() {\n    const alert = await this.alertController.create({\n      header: 'Usuario registrado',\n      message: 'El usuario se encuentra anteriormente registrado',\n      buttons: ['OK'],\n    });\n    await alert.present();\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}